@model FoireMuses.Client.Score

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>JScore</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code1)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code1)
            @Html.ValidationMessageFor(model => model.Code1)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Code2)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Code2)
            @Html.ValidationMessageFor(model => model.Code2)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Coirault)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Coirault)
            @Html.ValidationMessageFor(model => model.Coirault)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Composer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Composer)
            @Html.ValidationMessageFor(model => model.Composer)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CoupeMetrique)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CoupeMetrique)
            @Html.ValidationMessageFor(model => model.CoupeMetrique)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Verses)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Verses)
            @Html.ValidationMessageFor(model => model.Verses)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Delarue)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Delarue)
            @Html.ValidationMessageFor(model => model.Delarue)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comments)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comments)
            @Html.ValidationMessageFor(model => model.Comments)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Editor)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Editor)
            @Html.ValidationMessageFor(model => model.Editor)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.RythmSignature)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.RythmSignature)
            @Html.ValidationMessageFor(model => model.RythmSignature)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.OtherTitles)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.OtherTitles)
            @Html.ValidationMessageFor(model => model.OtherTitles)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Stanza)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Stanza)
            @Html.ValidationMessageFor(model => model.Stanza)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ScoreType)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ScoreType)
            @Html.ValidationMessageFor(model => model.ScoreType)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TextualSource)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TextualSource)
            @Html.ValidationMessageFor(model => model.TextualSource)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

